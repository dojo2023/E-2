CREATE TABLE USER (
  STAFF_ID INT PRIMARY KEY AUTO_INCREMENT,
  PASSWORD VARCHAR(20) NOT NULL,
  NAME VARCHAR(20) NOT NULL,
  ROLE INT(1),
  QUIZ BOOLEAN DEFAULT NULL,
  ANSWER_TIME DATETIME NOT NULL,
MARK_ID  varchar(20) NOT NULL,
BACKGROUND_ID  varchar(20) NOT NULL
);

CREATE TABLE WORKING (
  WORK_ID INT PRIMARY KEY AUTO_INCREMENT,
  WORK_START VARCHAR(20) NOT NULL,
  WORK_END VARCHAR(20) NOT NULL,
  WORK_STYLE VARCHAR(20) NOT NULL,
  STAFF_ID INT ,
  FOREIGN KEY(STAFF_ID) REFERENCES USER(STAFF_ID) ,
  WORK_DATE DATE NOT NULL
);

CREATE TABLE TASK (
  TASK_ID INT PRIMARY KEY AUTO_INCREMENT,
  TASK_THREAD VARCHAR(200) NOT NULL,
  CALENDAR DATETIME NOT NULL,
  STAFF_ID INT ,
  FOREIGN KEY(STAFF_ID) REFERENCES USER(STAFF_ID) 
);

CREATE TABLE COMMUNITY (
  WRITING_ID INT PRIMARY KEY AUTO_INCREMENT,
  WRITING_FORM VARCHAR(400),
  WRITING_TIME DATETIME NOT NULL,
  GOOD INT NOT NULL DEFAULT(0),
  STAFF_ID INT ,
  FOREIGN KEY(STAFF_ID) REFERENCES USER(STAFF_ID) 
);

CREATE TABLE GATYA (
  GATYA_ID VARCHAR(20) PRIMARY KEY,
  GATYA_PATH VARCHAR(255) NOT NULL,
  GATYA_NAME VARCHAR(20) NOT NULL,
  TICKET_CLASS INT(1) NOT NULL
);

CREATE TABLE GATYAGET (
  GATYA_ID VARCHAR,
  STAFF_ID INT ,
  PRIMARY KEY(GATYA_ID,STAFF_ID),
  FOREIGN KEY(GATYA_ID) REFERENCES GATYA(GATYA_ID),
  FOREIGN KEY(STAFF_ID) REFERENCES USER(STAFF_ID) 
);

CREATE TABLE WORD (
  WORD_ID INT PRIMARY KEY AUTO_INCREMENT,
  WORD_ITEM VARCHAR(100) NOT NULL,
  WORD_EX VARCHAR(1000) NOT NULL   
);

CREATE TABLE QUESTION (
  QUIZ_ID INT(20) PRIMARY KEY,
  QUIZ VARCHAR(200) NOT NULL,
  QUIZ_EX VARCHAR(1000) NOT NULL   
);

CREATE TABLE CHOICE (
  CHOICES_ID INT PRIMARY KEY AUTO_INCREMENT,
  CHOICES VARCHAR(50) NOT NULL,
  IS_ANSWER BOOLEAN DEFAULT NULL,
  QUIZ_ID INT,
  FOREIGN KEY(QUIZ_ID) REFERENCES QUESTION(QUIZ_ID)
);
CREATE TABLE QPOINT (
  STAFF_ID INT PRIMARY KEY,
  Q_POINT INT(99999),
  FOREIGN KEY(STAFF_ID) REFERENCES USER(STAFF_ID) 
);

CREATE TABLE TICKET (
  STAFF_ID INT PRIMARY KEY,
  ASGR_TICKET INT(10) NOT NULL,
  SMRI_TICKET INT(10) NOT NULL,
  SDS_TICKET INT(10) NOT NULL, 
  FOREIGN KEY(STAFF_ID) REFERENCES USER(STAFF_ID) 
);